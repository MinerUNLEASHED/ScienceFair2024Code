#!/bin/csh
#PBS -N python_job
# Job name

#PBS -S /bin/csh
# Use the C-shell interpreter

#PBS -l select=50:ncpus=20:mpiprocs=20:model=ivy
# Request 50 Ivy Bridge nodes with 20 MPI processes per node

#PBS -l walltime=2:00:00
# Maximum runtime of 2 hours

#PBS -j oe
# Combine stdout and stderr into a single file

#PBS -W group_list=n2217
# Specify your project group

#PBS -m abe
# Notify on abort, begin, and end

#PBS -M 100032493@ccisd.net
# Email address for notifications

# Load required modules
module load comp-intel/2020.4.304
module load mpi-hpe/mpt
module load python3

# Change to the directory where the job was submitted
cd $PBS_O_WORKDIR

# Compile code if needed (example flags for AVX and vectorization)
# These are provided as an example for users compiling binaries
# icc -O2 -xAVX -ipo -vec-report2 -o my_program my_program.c

# Set up a Python virtual environment for dependencies
python3 -m venv myenv
source myenv/bin/activate
pip install --upgrade pip
pip install numpy pandas qiskit qiskit-machine-learning scipy scikit-learn

# Calculate the total number of MPI processes (50 nodes Ã— 20 processes per node = 1000)
set total_procs = 1000

# Execute the Python script using mpiexec
mpiexec -np $total_procs python "QkNN - ARCENE - T2.py"

# End of script
